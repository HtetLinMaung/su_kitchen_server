{"version":3,"sources":["assets/images/ma-la-xiang-guo-10.jpg","components/FocusTextField.jsx","context/AppProvider.jsx","pages/admin/Login.jsx","router/router.js","pages/admin/Dashbord.jsx","router/AppRouter.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","input","borderWidth","padding","borderRadius","width","color","boxSizing","backgroundColor","transition","outline","boxShadow","errorLabel","fontSize","FocusTextField","props","classes","newProps","className","defaultProps","AppContext","createContext","theme","backdrop","zIndex","drawer","AppProvider","children","value","useState","Provider","Backdrop","open","CircularProgress","root","height","coverImageContainer","coverImage","controls","title","button","textTransform","paddingLeft","paddingRight","routes","path","component","history","useHistory","useContext","loading","setLoading","phone_no","setPhoneNo","password","setPassword","phoneErr","setPhoneErr","passwordErr","setPasswordErr","matches","useMediaQuery","isValidate","length","loginHandler","a","fetch","host","method","headers","body","JSON","stringify","then","res","json","response","message","Error","data","role","localStorage","setItem","token","push","alert","Grid","container","justify","alignItems","item","xs","sm","md","lg","spacing","direction","placeholder","onChange","e","target","replace","type","Button","size","variant","onClick","disabled","style","display","src","alt","AppRouter","map","route","key","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.d6b615c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ma-la-xiang-guo-10.beb1a9f7.jpg\";","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  input: {\r\n    borderWidth: 0,\r\n    padding: \".6rem .9rem\",\r\n    borderRadius: 10,\r\n    width: \"100%\",\r\n    color: \"#E9E9E9\",\r\n    boxSizing: \"border-box\",\r\n    backgroundColor: \"#FEFEFE\",\r\n    transition: \"all 0.3s\",\r\n    \"&:focus\": {\r\n      color: \"#545F6D\",\r\n      outline: \"none\",\r\n      boxShadow:\r\n        \"0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)!important\",\r\n      \"&::placeholder\": {\r\n        color: \"#545F6D\"\r\n      }\r\n    },\r\n    \"&::placeholder\": {\r\n      color: \"#E9E9E9\"\r\n    }\r\n  },\r\n  errorLabel: {\r\n    color: \"red\",\r\n    fontSize: 12\r\n  }\r\n}));\r\n\r\nconst FocusTextField = (props) => {\r\n  const classes = useStyles();\r\n  const newProps = { ...props };\r\n  delete newProps.errorLabel;\r\n\r\n  let errorLabel = \"\";\r\n  if (props.errorLabel) {\r\n    errorLabel = <div className={classes.errorLabel}>{props.errorLabel}</div>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <input {...newProps} className={`${classes.input} ${props.className}`} />\r\n      {errorLabel}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nFocusTextField.propTypes = {\r\n  className: PropTypes.string,\r\n  errorLabel: PropTypes.string\r\n};\r\nFocusTextField.defaultProps = {\r\n  className: \"\"\r\n};\r\n\r\nexport default FocusTextField;\r\n","import React, { createContext, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport const AppContext = createContext([]);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\"\r\n  }\r\n}));\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const classes = useStyles();\r\n  const value = useState(false);\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n      <Backdrop className={classes.backdrop} open={value[0]}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppProvider;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport FocusTextField from \"../../components/FocusTextField\";\r\n\r\nimport coverImage from \"../../assets/images/ma-la-xiang-guo-10.jpg\";\r\n\r\nimport { host } from \"../../app.config.json\";\r\nimport { AppContext } from \"../../context/AppProvider\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: \"100vh\"\r\n  },\r\n  coverImageContainer: {\r\n    height: \"100vh\"\r\n  },\r\n  coverImage: {\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  },\r\n  controls: {\r\n    backgroundColor: \"#F3F5F9\"\r\n  },\r\n  title: {\r\n    color: \"#41546B\"\r\n  },\r\n  button: {\r\n    textTransform: \"capitalize\",\r\n    backgroundColor: \"#FE9215\",\r\n    color: \"#fff\",\r\n    borderRadius: 10,\r\n    paddingLeft: \"2rem\",\r\n    paddingRight: \"2rem\",\r\n    \"&:hover, &:active\": { backgroundColor: \"#FE9215\" }\r\n  }\r\n}));\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useContext(AppContext);\r\n  const [phone_no, setPhoneNo] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phoneErr, setPhoneErr] = useState(\"\");\r\n  const [passwordErr, setPasswordErr] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery(\"(max-width:1024px)\");\r\n\r\n  const isValidate = () => {\r\n    if (phone_no.length >= 9 && phone_no.length <= 11 && password.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const phoneHandler = (e) => {\r\n    e.target.value = e.target.value.replace(/[a-zA-z]/g, \"\");\r\n    const { value } = e.target;\r\n    setPhoneNo(value);\r\n    if (value.length < 9 || value.length > 11) {\r\n      setPhoneErr(\"Phone no must be between 9 and 11 characters!\");\r\n    } else {\r\n      setPhoneErr(\"\");\r\n    }\r\n  };\r\n\r\n  const passwordHandler = (e) => {\r\n    const { value } = e.target;\r\n    setPassword(value);\r\n    if (value.length === 0) {\r\n      setPasswordErr(\"Password must not be empty!\");\r\n    } else {\r\n      setPasswordErr(\"\");\r\n    }\r\n  };\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      if (isValidate()) {\r\n        setLoading(true);\r\n        const response = await fetch(`${host}/api/auth/login`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            phone_no,\r\n            password\r\n          })\r\n        }).then((res) => res.json());\r\n        setLoading(false);\r\n\r\n        if (response.message !== \"logged in successful\") {\r\n          const error = new Error(response.message);\r\n          throw error;\r\n        }\r\n        if (response.data.role !== \"admin\") {\r\n          const error = new Error(\"Unauthorized!\");\r\n          throw error;\r\n        }\r\n        localStorage.setItem(\"su_token\", response.token);\r\n        history.push(\"/admin\");\r\n      }\r\n    } catch (err) {\r\n      if (loading) setLoading(false);\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        container\r\n        item\r\n        xs={12}\r\n        sm={12}\r\n        md={12}\r\n        lg={7}\r\n        className={classes.controls}\r\n      >\r\n        <Grid\r\n          spacing={3}\r\n          item\r\n          container\r\n          xs={10}\r\n          md={4}\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n        >\r\n          <Grid item>\r\n            <h2 className={classes.title}>Login to Su's Kitchen Admin</h2>\r\n          </Grid>\r\n          <Grid item>\r\n            <FocusTextField\r\n              placeholder=\"Phone number\"\r\n              value={phone_no}\r\n              onChange={phoneHandler}\r\n              errorLabel={phoneErr}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <FocusTextField\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={passwordHandler}\r\n              errorLabel={passwordErr}\r\n            />\r\n          </Grid>\r\n          <Grid item container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Button\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                onClick={loginHandler}\r\n                disabled={!isValidate() || loading}\r\n              >\r\n                Log In\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        style={{ display: matches ? \"none\" : \"\" }}\r\n        item\r\n        xs={12}\r\n        md={5}\r\n        className={classes.coverImageContainer}\r\n      >\r\n        <img src={coverImage} className={classes.coverImage} alt=\"\" />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import Login from \"../pages/admin/Login\";\r\nimport Dashboard from \"../pages/admin/Dashbord\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/admin/login\",\r\n    component: Login\r\n  },\r\n  {\r\n    path: \"/admin\",\r\n    component: Dashboard\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import React from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  return <div>Dashboard</div>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport routes from \"./router\";\r\n\r\nconst AppRouter = () => (\r\n  <Router>\r\n    <Switch>\r\n      {routes.map((route) => (\r\n        <Route\r\n          key={route.path}\r\n          path={route.path}\r\n          exact\r\n          component={route.component}\r\n        />\r\n      ))}\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\nimport AppRouter from \"./router/AppRouter\";\nimport AppProvider from \"./context/AppProvider\";\n\nconst App = () => {\n  return (\n    <AppProvider>\n      <AppRouter />\n    </AppProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}